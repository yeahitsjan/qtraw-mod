 rawspeed.pro | 234 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 234 insertions(+)

diff --git a/rawspeed.pro b/rawspeed.pro
new file mode 100644
index 00000000..48d5c12c
--- /dev/null
+++ b/rawspeed.pro
@@ -0,0 +1,234 @@
+TEMPLATE=lib
+TARGET=rawspeed
+CONFIG += warn_off
+
+win32: {
+    build_pass:CONFIG(debug, debug|release) {
+        win32: TARGET = $$join(TARGET,,,d) # 'd' suffix for debug builds on Windows
+    }
+
+    INCLUDEPATH *= $$PWD/../third-party/zlib/include \
+        $$PWD/../third-party/libjpeg-turbo/include
+    LIBS+=-L$$PWD/../third-party/zlib/lib/ -lz \
+          -L$$PWD/../third-party/libjpeg-turbo/lib -ljpeg
+    LIBS+=-lws2_32 -fopenmp
+}
+unix:INCLUDEPATH+=/usr/local/include /usr/local/include/libxml2
+unix:CONFIG+=staticlib
+
+INCLUDEPATH *= $$PWD/src \
+               $$PWD/src/librawspeed \
+               $$PWD/src/external \
+               $$PWD/../third-party/libjpeg-turbo/include \
+               $$PWD/../pugixml/src
+
+HEADERS =  \
+    src/dlldef.h \
+    src/librawspeed/common/Array2DRef.h \
+    src/librawspeed/common/ChecksumFile.h \
+    src/librawspeed/common/Common.h \
+    src/librawspeed/common/Cpuid.h \
+    src/librawspeed/common/DefaultInitAllocatorAdaptor.h \
+    src/librawspeed/common/DngOpcodes.h \
+    src/librawspeed/common/ErrorLog.h \
+    src/librawspeed/common/Memory.h \
+    src/librawspeed/common/Mutex.h \
+    src/librawspeed/common/NORangesSet.h \
+    src/librawspeed/common/Optional.h \
+    src/librawspeed/common/Point.h \
+    src/librawspeed/common/Range.h \
+    src/librawspeed/common/RawImage.h \
+    src/librawspeed/common/RawspeedException.h \
+    src/librawspeed/common/SimpleLUT.h \
+    src/librawspeed/common/Spline.h \
+    src/librawspeed/common/TableLookUp.h \
+    src/librawspeed/decoders/AbstractTiffDecoder.h \
+    src/librawspeed/decoders/ArwDecoder.h \
+    src/librawspeed/decoders/Cr2Decoder.h \
+    src/librawspeed/decoders/CrwDecoder.h \
+    src/librawspeed/decoders/DcrDecoder.h \
+    src/librawspeed/decoders/DcsDecoder.h \
+    src/librawspeed/decoders/DngDecoder.h \
+    src/librawspeed/decoders/ErfDecoder.h \
+    src/librawspeed/decoders/IiqDecoder.h \
+    src/librawspeed/decoders/KdcDecoder.h \
+    src/librawspeed/decoders/MefDecoder.h \
+    src/librawspeed/decoders/MosDecoder.h \
+    src/librawspeed/decoders/MrwDecoder.h \
+    src/librawspeed/decoders/NakedDecoder.h \
+    src/librawspeed/decoders/NefDecoder.h \
+    src/librawspeed/decoders/OrfDecoder.h \
+    src/librawspeed/decoders/PefDecoder.h \
+    src/librawspeed/decoders/RafDecoder.h \
+    src/librawspeed/decoders/RawDecoder.h \
+    src/librawspeed/decoders/RawDecoderException.h \
+    src/librawspeed/decoders/Rw2Decoder.h \
+    src/librawspeed/decoders/SimpleTiffDecoder.h \
+    src/librawspeed/decoders/SrwDecoder.h \
+    src/librawspeed/decoders/ThreefrDecoder.h \
+    src/librawspeed/decompressors/AbstractDecompressor.h \
+    src/librawspeed/decompressors/AbstractDngDecompressor.h \
+    src/librawspeed/decompressors/AbstractHuffmanTable.h \
+    src/librawspeed/decompressors/AbstractLJpegDecompressor.h \
+    src/librawspeed/decompressors/AbstractSamsungDecompressor.h \
+    src/librawspeed/decompressors/BinaryHuffmanTree.h \
+    src/librawspeed/decompressors/Cr2Decompressor.h \
+    src/librawspeed/decompressors/CrwDecompressor.h \
+    src/librawspeed/decompressors/DeflateDecompressor.h \
+    src/librawspeed/decompressors/FujiDecompressor.h \
+    src/librawspeed/decompressors/HasselbladDecompressor.h \
+    src/librawspeed/decompressors/HuffmanTable.h \
+    src/librawspeed/decompressors/HuffmanTableLUT.h \
+    src/librawspeed/decompressors/HuffmanTableLookup.h \
+    src/librawspeed/decompressors/HuffmanTableTree.h \
+    src/librawspeed/decompressors/HuffmanTableVector.h \
+    src/librawspeed/decompressors/JpegDecompressor.h \
+    src/librawspeed/decompressors/KodakDecompressor.h \
+    src/librawspeed/decompressors/LJpegDecompressor.h \
+    src/librawspeed/decompressors/NikonDecompressor.h \
+    src/librawspeed/decompressors/OlympusDecompressor.h \
+    src/librawspeed/decompressors/PanasonicDecompressor.h \
+    src/librawspeed/decompressors/PanasonicDecompressorV5.h \
+    src/librawspeed/decompressors/PentaxDecompressor.h \
+    src/librawspeed/decompressors/PhaseOneDecompressor.h \
+    src/librawspeed/decompressors/SamsungV0Decompressor.h \
+    src/librawspeed/decompressors/SamsungV1Decompressor.h \
+    src/librawspeed/decompressors/SamsungV2Decompressor.h \
+    src/librawspeed/decompressors/SonyArw1Decompressor.h \
+    src/librawspeed/decompressors/SonyArw2Decompressor.h \
+    src/librawspeed/decompressors/UncompressedDecompressor.h \
+    src/librawspeed/decompressors/VC5Decompressor.h \
+    src/librawspeed/interpolators/Cr2sRawInterpolator.h \
+    src/librawspeed/io/BitPumpJPEG.h \
+    src/librawspeed/io/BitPumpLSB.h \
+    src/librawspeed/io/BitPumpMSB.h \
+    src/librawspeed/io/BitPumpMSB16.h \
+    src/librawspeed/io/BitPumpMSB32.h \
+    src/librawspeed/io/BitStream.h \
+    src/librawspeed/io/Buffer.h \
+    src/librawspeed/io/ByteStream.h \
+    src/librawspeed/io/Endianness.h \
+    src/librawspeed/io/FileIO.h \
+    src/librawspeed/io/FileIOException.h \
+    src/librawspeed/io/FileReader.h \
+    src/librawspeed/io/FileWriter.h \
+    src/librawspeed/io/IOException.h \
+    src/librawspeed/metadata/BlackArea.h \
+    src/librawspeed/metadata/Camera.h \
+    src/librawspeed/metadata/CameraMetaData.h \
+    src/librawspeed/metadata/CameraMetadataException.h \
+    src/librawspeed/metadata/CameraSensorInfo.h \
+    src/librawspeed/metadata/ColorFilterArray.h \
+    src/librawspeed/parsers/CiffParser.h \
+    src/librawspeed/parsers/CiffParserException.h \
+    src/librawspeed/parsers/FiffParser.h \
+    src/librawspeed/parsers/FiffParserException.h \
+    src/librawspeed/parsers/RawParser.h \
+    src/librawspeed/parsers/RawParserException.h \
+    src/librawspeed/parsers/TiffParser.h \
+    src/librawspeed/parsers/TiffParserException.h \
+    src/librawspeed/tiff/CiffEntry.h \
+    src/librawspeed/tiff/CiffIFD.h \
+    src/librawspeed/tiff/CiffTag.h \
+    src/librawspeed/tiff/TiffEntry.h \
+    src/librawspeed/tiff/TiffIFD.h \
+    src/librawspeed/tiff/TiffTag.h \
+    src/rawspeedconfig.h
+
+SOURCES = \
+    src/librawspeed/common/ChecksumFile.cpp \
+    src/librawspeed/common/Common.cpp \
+    src/librawspeed/common/Cpuid.cpp \
+    src/librawspeed/common/DngOpcodes.cpp \
+    src/librawspeed/common/ErrorLog.cpp \
+    src/librawspeed/common/GetNumberOfProcessorCores.cpp \
+    src/librawspeed/common/Memory.cpp \
+    src/librawspeed/common/RawImage.cpp \
+    src/librawspeed/common/RawImageDataFloat.cpp \
+    src/librawspeed/common/RawImageDataU16.cpp \
+    src/librawspeed/common/TableLookUp.cpp \
+    src/librawspeed/decoders/AbstractTiffDecoder.cpp \
+    src/librawspeed/decoders/ArwDecoder.cpp \
+    src/librawspeed/decoders/Cr2Decoder.cpp \
+    src/librawspeed/decoders/CrwDecoder.cpp \
+    src/librawspeed/decoders/DcrDecoder.cpp \
+    src/librawspeed/decoders/DcsDecoder.cpp \
+    src/librawspeed/decoders/DngDecoder.cpp \
+    src/librawspeed/decoders/ErfDecoder.cpp \
+    src/librawspeed/decoders/IiqDecoder.cpp \
+    src/librawspeed/decoders/KdcDecoder.cpp \
+    src/librawspeed/decoders/MefDecoder.cpp \
+    src/librawspeed/decoders/MosDecoder.cpp \
+    src/librawspeed/decoders/MrwDecoder.cpp \
+    src/librawspeed/decoders/NakedDecoder.cpp \
+    src/librawspeed/decoders/NefDecoder.cpp \
+    src/librawspeed/decoders/OrfDecoder.cpp \
+    src/librawspeed/decoders/PefDecoder.cpp \
+    src/librawspeed/decoders/RafDecoder.cpp \
+    src/librawspeed/decoders/RawDecoder.cpp \
+    src/librawspeed/decoders/Rw2Decoder.cpp \
+    src/librawspeed/decoders/SimpleTiffDecoder.cpp \
+    src/librawspeed/decoders/SrwDecoder.cpp \
+    src/librawspeed/decoders/ThreefrDecoder.cpp \
+    src/librawspeed/decompressors/AbstractDngDecompressor.cpp \
+    src/librawspeed/decompressors/AbstractLJpegDecompressor.cpp \
+    src/librawspeed/decompressors/Cr2Decompressor.cpp \
+    src/librawspeed/decompressors/CrwDecompressor.cpp \
+    src/librawspeed/decompressors/DeflateDecompressor.cpp \
+    src/librawspeed/decompressors/FujiDecompressor.cpp \
+    src/librawspeed/decompressors/HasselbladDecompressor.cpp \
+    src/librawspeed/decompressors/JpegDecompressor.cpp \
+    src/librawspeed/decompressors/KodakDecompressor.cpp \
+    src/librawspeed/decompressors/LJpegDecompressor.cpp \
+    src/librawspeed/decompressors/NikonDecompressor.cpp \
+    src/librawspeed/decompressors/OlympusDecompressor.cpp \
+    src/librawspeed/decompressors/PanasonicDecompressor.cpp \
+    src/librawspeed/decompressors/PanasonicDecompressorV5.cpp \
+    src/librawspeed/decompressors/PentaxDecompressor.cpp \
+    src/librawspeed/decompressors/PhaseOneDecompressor.cpp \
+    src/librawspeed/decompressors/SamsungV0Decompressor.cpp \
+    src/librawspeed/decompressors/SamsungV1Decompressor.cpp \
+    src/librawspeed/decompressors/SamsungV2Decompressor.cpp \
+    src/librawspeed/decompressors/SonyArw1Decompressor.cpp \
+    src/librawspeed/decompressors/SonyArw2Decompressor.cpp \
+    src/librawspeed/decompressors/UncompressedDecompressor.cpp \
+    src/librawspeed/decompressors/VC5Decompressor.cpp \
+    src/librawspeed/interpolators/Cr2sRawInterpolator.cpp \
+    src/librawspeed/io/BitStream.cpp \
+    src/librawspeed/io/FileReader.cpp \
+    src/librawspeed/io/FileWriter.cpp \
+    src/librawspeed/metadata/Camera.cpp \
+    src/librawspeed/metadata/CameraMetaData.cpp \
+    src/librawspeed/metadata/CameraSensorInfo.cpp \
+    src/librawspeed/metadata/ColorFilterArray.cpp \
+    src/librawspeed/parsers/CiffParser.cpp \
+    src/librawspeed/parsers/FiffParser.cpp \
+    src/librawspeed/parsers/RawParser.cpp \
+    src/librawspeed/parsers/TiffParser.cpp \
+    src/librawspeed/tiff/CiffEntry.cpp \
+    src/librawspeed/tiff/CiffIFD.cpp \
+    src/librawspeed/tiff/TiffEntry.cpp \
+    src/librawspeed/tiff/TiffIFD.cpp
+
+DESTDIR = ../libs
+
+DEFINES+=RAWSPEED_BUILDLIB
+CONFIG-=qt
+
+# Installation
+win32: {
+    target.path = $$[QT_INSTALL_LIBEXECS]
+} else {
+    target.path = $$[QT_INSTALL_LIBS]
+}
+INSTALLS += target
+
+win32: {
+    dll_dependencies.path = $$[QT_INSTALL_LIBEXECS]
+    dll_dependencies.files = $$PWD/../third-party/zlib/bin/zlib1.dll \
+                             $$PWD/../third-party/libjpeg-turbo/bin/libjpeg-62.dll
+    a_dependencies.path = $$[QT_INSTALL_LIBS]
+    a_dependencies.files = $$PWD/../third-party/zlib/lib/libz.a \
+                           $$PWD/../third-party/libjpeg-turbo/lib/libjpeg.a
+    INSTALLS += dll_dependencies a_dependencies
+}
 src/dlldef.h | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/src/dlldef.h b/src/dlldef.h
new file mode 100644
index 00000000..8192864c
--- /dev/null
+++ b/src/dlldef.h
@@ -0,0 +1,20 @@
+#ifndef DLLDEF_H
+#define DLLDEF_H
+#
+#ifdef WIN32
+#ifdef _MSC_VER
+#pragma warning( disable: 4251 )
+#endif
+#ifdef RAWSPEED_NODLL
+# define DllDef
+#else
+# ifdef RAWSPEED_BUILDLIB
+#    define DllDef   __declspec( dllexport )
+# else
+#    define DllDef   __declspec( dllimport )
+# endif
+#endif
+#else
+#  define DllDef
+#endif
+#endif
 src/librawspeed/common/RawImage.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/librawspeed/common/RawImage.h b/src/librawspeed/common/RawImage.h
index 98ed2623..c688fb7c 100644
--- a/src/librawspeed/common/RawImage.h
+++ b/src/librawspeed/common/RawImage.h
@@ -20,6 +20,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "rawspeedconfig.h"
 #include "ThreadSafetyAnalysis.h" // for GUARDED_BY, REQUIRES
 #include "common/Array2DRef.h"    // for Array2DRef
@@ -94,7 +95,7 @@ public:
   int isoSpeed;
 };
 
-class RawImageData : public ErrorLog {
+class DllDef RawImageData : public ErrorLog {
   friend class RawImageWorker;
 public:
   virtual ~RawImageData();
@@ -218,7 +219,7 @@ protected:
   friend class RawImage;
 };
 
- class RawImage {
+ class DllDef RawImage {
  public:
    static RawImage create(RawImageType type = TYPE_USHORT16);
    static RawImage create(const iPoint2D& dim,
 src/librawspeed/common/RawspeedException.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/librawspeed/common/RawspeedException.h b/src/librawspeed/common/RawspeedException.h
index bb7a4a5e..f75e726d 100644
--- a/src/librawspeed/common/RawspeedException.h
+++ b/src/librawspeed/common/RawspeedException.h
@@ -21,6 +21,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "rawspeedconfig.h"
 
 #include "common/Common.h"
 src/librawspeed/decoders/RawDecoder.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/librawspeed/decoders/RawDecoder.h b/src/librawspeed/decoders/RawDecoder.h
index 22b99a35..1852bc7b 100644
--- a/src/librawspeed/decoders/RawDecoder.h
+++ b/src/librawspeed/decoders/RawDecoder.h
@@ -21,6 +21,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "common/Common.h"   // for uint32_t, BitOrder
 #include "common/RawImage.h" // for RawImage
 #include "metadata/Camera.h" // for Hints
@@ -34,7 +35,7 @@ class CameraMetaData;
 
 class TiffIFD;
 
-class RawDecoder
+class DllDef RawDecoder
 {
 public:
   /* Construct decoder instance - Buffer is a filemap of the file to be decoded
 src/librawspeed/io/Buffer.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/librawspeed/io/Buffer.h b/src/librawspeed/io/Buffer.h
index 265ff113..99b3fbfa 100644
--- a/src/librawspeed/io/Buffer.h
+++ b/src/librawspeed/io/Buffer.h
@@ -21,6 +21,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "AddressSanitizer.h" // for ASan
 #include "common/Common.h"    // for uint8_t, uint64_t, uint32_t
 #include "common/Memory.h"    // for alignedFree
@@ -41,7 +42,7 @@ namespace rawspeed {
  * It intentionally supports only read/const access to the underlying memory.
  *
  *************************************************************************/
-class Buffer
+class DllDef Buffer
 {
 public:
   using size_type = uint32_t;
 src/librawspeed/metadata/Camera.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/librawspeed/metadata/Camera.h b/src/librawspeed/metadata/Camera.h
index f484f46e..a5eab022 100644
--- a/src/librawspeed/metadata/Camera.h
+++ b/src/librawspeed/metadata/Camera.h
@@ -20,6 +20,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "rawspeedconfig.h"
 #include "common/Common.h"             // for uint32_t
 #include "common/Point.h"              // for iPoint2D
@@ -75,7 +76,7 @@ public:
   }
 };
 
-class Camera
+class DllDef Camera
 {
 public:
 #ifdef HAVE_PUGIXML
 src/librawspeed/metadata/CameraMetaData.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/librawspeed/metadata/CameraMetaData.h b/src/librawspeed/metadata/CameraMetaData.h
index 4f5f3718..b42af6c2 100644
--- a/src/librawspeed/metadata/CameraMetaData.h
+++ b/src/librawspeed/metadata/CameraMetaData.h
@@ -20,6 +20,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include "rawspeedconfig.h"
 #include "common/Common.h"   // for uint32_t
 #include "metadata/Camera.h" // for Camera
@@ -43,7 +44,7 @@ struct CameraId {
   }
 };
 
-class CameraMetaData final {
+class DllDef CameraMetaData final {
 public:
   CameraMetaData() = default;
 
 src/librawspeed/parsers/RawParser.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/librawspeed/parsers/RawParser.h b/src/librawspeed/parsers/RawParser.h
index 6580e22c..3a80ae01 100644
--- a/src/librawspeed/parsers/RawParser.h
+++ b/src/librawspeed/parsers/RawParser.h
@@ -20,6 +20,7 @@
 
 #pragma once
 
+#include "dlldef.h"
 #include <memory> // for unique_ptr
 
 namespace rawspeed {
@@ -30,7 +31,7 @@ class CameraMetaData;
 
 class RawDecoder;
 
-class RawParser {
+class DllDef RawParser {
 public:
   explicit RawParser(const Buffer* inputData) : mInput(inputData) {}
   virtual ~RawParser() = default;
 src/rawspeedconfig.h | 89 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 89 insertions(+)

diff --git a/src/rawspeedconfig.h b/src/rawspeedconfig.h
new file mode 100644
index 00000000..85f4567c
--- /dev/null
+++ b/src/rawspeedconfig.h
@@ -0,0 +1,89 @@
+/*
+    RawSpeed - RAW file decoder.
+
+    Copyright (C) 2016-2018 Roman Lebedev
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+*/
+
+#pragma once
+
+#if defined(__SSE2__)
+#define WITH_SSE2
+#else
+/* #undef WITH_SSE2 */
+#endif
+
+#define HAVE_PUGIXML
+
+#define HAVE_OPENMP
+
+#define HAVE_ZLIB
+
+#define HAVE_JPEG
+#define HAVE_JPEG_MEM_SRC
+
+#define HAVE_CXX_THREAD_LOCAL
+#define HAVE_GCC_THREAD_LOCAL
+
+// which aligned memory allocation function is available, if any?
+// only the first one found will be enabled
+// #define HAVE_POSIX_MEMALIGN
+// #define HAVE_ALIGNED_ALLOC
+#define HAVE_MM_MALLOC
+// #define HAVE_ALIGNED_MALLOC
+
+// #define RAWSPEED_STANDALONE_BUILD
+#ifdef RAWSPEED_STANDALONE_BUILD
+#define RAWSPEED_SOURCE_DIR "@RAWSPEED_SOURCE_DIR@"
+#else
+// If rawspeed is being built as part of some larger build, we can not retain
+// the RAWSPEED_SOURCE_DIR, because that would affect the reproducible builds.
+#endif
+
+#undef OPENMP_FIRSTPRIVATE_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+#undef OPENMP_SHARED_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+
+#ifdef HAVE_OPENMP
+// #define OPENMP_FIRSTPRIVATE_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+#ifdef OPENMP_FIRSTPRIVATE_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+// See https://bugs.llvm.org/show_bug.cgi?id=35873
+//     https://redmine.darktable.org/issues/12568
+#define OMPFIRSTPRIVATECLAUSE(...)
+#else
+#define OMPFIRSTPRIVATECLAUSE(...) firstprivate(__VA_ARGS__)
+#endif
+#undef OPENMP_FIRSTPRIVATE_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+
+// #define OPENMP_SHARED_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+#ifdef OPENMP_SHARED_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+// See https://godbolt.org/z/AiyuX9
+#define OMPSHAREDCLAUSE(...)
+#else
+#define OMPSHAREDCLAUSE(...) shared(__VA_ARGS__)
+#endif
+#undef OPENMP_SHARED_CLAUSE_IS_BROKEN_FOR_CONST_VARIABLES
+#endif // HAVE_OPENMP
+
+// see http://clang.llvm.org/docs/LanguageExtensions.html
+#ifndef __has_feature      // Optional of course.
+#define __has_feature(x) 0 // Compatibility with non-clang compilers.
+#endif
+#ifndef __has_extension
+#define __has_extension __has_feature // Compatibility with pre-3.0 compilers.
+#endif
+
+#define RAWSPEED_UNLIKELY_FUNCTION __attribute__((cold))
+#define RAWSPEED_NOINLINE __attribute__((noinline))
